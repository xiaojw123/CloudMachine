apply plugin: 'com.android.application'
def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

static def getTime() {
    new Date().format("MMdd", TimeZone.getDefault());
}

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name
        multiDexEnabled true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file('D:/CP/C@Cloud/GIt_Pro/keystore/cloudm.keystore')
            storePassword 'cloudm.com'
            keyAlias 'cloudm.keystore'
            keyPassword 'cloudm.com'
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_KEY_VALUE: "59e5ba57677baa51d3000b93"]
        }
        debug {
            signingConfig signingConfigs.release
            manifestPlaceholders = [UMENG_KEY_VALUE: "57bd696d67e58e71d3000d02"]
        }
    }

    //打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    fileName = "cloudm_release_${defaultConfig.versionName}_${getTime()}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "cloudm_debug_${defaultConfig.versionName}_${getTime()}.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }

        }
    }

}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:${libs.support}"
    compile "com.android.support:recyclerview-v7:${libs.support}"
    compile "com.android.support:support-v4:${libs.support}"
    compile files('libs/download-manager.jar')
    compile files('libs/httpmime-4.1.2.jar')
    compile files('libs/pinyin4j-2.5.0.jar')
    compile files('libs/systembartint-1.0.4.jar')
    compile files('libs/universal-image-loader-1.9.0.jar')
    compile files('libs/utdid4all-1.0.4.jar')
    compile files('libs/locSDK_6.12.jar')
    compile files('libs/libammsdk.jar')
    compile files('libs/alipaySingle-20161222.jar')
    /*/retrofit和rxjava*/

    //打印日志

    //glide图片加载

    //glide配置okhttp访问https网络
    compile project(path: ':toasty')
    //recyclerview万能适配器

    /*compile 'com.zhy:base-rvadapter:3.0.3'*/

    //圆点进度条

    //glide附属类
    compile project(':toasty')
    compile project(':PhotoPicker')
    //ButterKnife

    //圆形头像

    //生成二维码

    //压缩图片轻量级框架

    //分包打包

    //    compile 'com.google.android.gms:play-services-appindexing:8.4.0'
    compile files('libs/jcore-android-1.1.6.jar')
    //    compile ('com.aliyun.ams:alicloud-android-hotfix:3.1.0') {

    //        exclude(module:'alicloud-android-utdid')

    //    }
    compile files('libs/SocialSDK_QQ_Simplify.jar')
    //    compile 'org.greenrobot:greendao:3.2.2' // add library

    //    compile 'com.jcodecraeer:xrecyclerview:1.3.2'TODO://XRecyclerView定制需求
    compile project(':xrecyclerview')
    compile files('libs/alipaySdk-20170922.jar')
    //    compile 'com.yanzhenjie:recyclerview-swipe:1.0.4'
    compile files('libs/pldroid-player-2.1.0.jar')
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.rey5137:material:1.2.2'
    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile 'io.reactivex:rxjava:1.0.1'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.orhanobut:logger:1.15'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'com.jakewharton:butterknife:8.5.1'
    compile 'com.google.zxing:core:3.2.1'
    compile 'cn.bingoogolapple:bga-qrcodecore:1.1.7@aar'
    compile 'cn.bingoogolapple:bga-zxing:1.1.7@aar'
    compile 'id.zelory:compressor:1.0.4'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
    compile 'com.yanzhenjie:recyclerview-swipe:1.1.4'
    compile 'com.amap.api:location:3.4.1'
    compile 'com.amap.api:search:5.2.1'
    compile 'com.amap.api:navi-3dmap:5.2.1_3dmap5.2.1'
    compile 'com.yanzhenjie:permission:1.1.0'
    compile 'com.umeng.analytics:analytics:6.1.2'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    compile 'org.litepal.android:core:1.3.2'
    compile 'com.qiniu:qiniu-android-sdk:7.3.10'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
}

//repositories {
//    maven {
//        url "http://maven.aliyun.com/nexus/content/repositories/releases"
//    }
//}